package com.nandi.gsgdsecond.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.nandi.gsgdsecond.bean.MonitorPoint;
import com.nandi.gsgdsecond.bean.DisasterInfo;
import com.nandi.gsgdsecond.bean.DailyLogInfo;
import com.nandi.gsgdsecond.bean.MonitorInfo;
import com.nandi.gsgdsecond.bean.DisasterPoint;

import com.nandi.gsgdsecond.greendao.MonitorPointDao;
import com.nandi.gsgdsecond.greendao.DisasterInfoDao;
import com.nandi.gsgdsecond.greendao.DailyLogInfoDao;
import com.nandi.gsgdsecond.greendao.MonitorInfoDao;
import com.nandi.gsgdsecond.greendao.DisasterPointDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig monitorPointDaoConfig;
    private final DaoConfig disasterInfoDaoConfig;
    private final DaoConfig dailyLogInfoDaoConfig;
    private final DaoConfig monitorInfoDaoConfig;
    private final DaoConfig disasterPointDaoConfig;

    private final MonitorPointDao monitorPointDao;
    private final DisasterInfoDao disasterInfoDao;
    private final DailyLogInfoDao dailyLogInfoDao;
    private final MonitorInfoDao monitorInfoDao;
    private final DisasterPointDao disasterPointDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        monitorPointDaoConfig = daoConfigMap.get(MonitorPointDao.class).clone();
        monitorPointDaoConfig.initIdentityScope(type);

        disasterInfoDaoConfig = daoConfigMap.get(DisasterInfoDao.class).clone();
        disasterInfoDaoConfig.initIdentityScope(type);

        dailyLogInfoDaoConfig = daoConfigMap.get(DailyLogInfoDao.class).clone();
        dailyLogInfoDaoConfig.initIdentityScope(type);

        monitorInfoDaoConfig = daoConfigMap.get(MonitorInfoDao.class).clone();
        monitorInfoDaoConfig.initIdentityScope(type);

        disasterPointDaoConfig = daoConfigMap.get(DisasterPointDao.class).clone();
        disasterPointDaoConfig.initIdentityScope(type);

        monitorPointDao = new MonitorPointDao(monitorPointDaoConfig, this);
        disasterInfoDao = new DisasterInfoDao(disasterInfoDaoConfig, this);
        dailyLogInfoDao = new DailyLogInfoDao(dailyLogInfoDaoConfig, this);
        monitorInfoDao = new MonitorInfoDao(monitorInfoDaoConfig, this);
        disasterPointDao = new DisasterPointDao(disasterPointDaoConfig, this);

        registerDao(MonitorPoint.class, monitorPointDao);
        registerDao(DisasterInfo.class, disasterInfoDao);
        registerDao(DailyLogInfo.class, dailyLogInfoDao);
        registerDao(MonitorInfo.class, monitorInfoDao);
        registerDao(DisasterPoint.class, disasterPointDao);
    }
    
    public void clear() {
        monitorPointDaoConfig.clearIdentityScope();
        disasterInfoDaoConfig.clearIdentityScope();
        dailyLogInfoDaoConfig.clearIdentityScope();
        monitorInfoDaoConfig.clearIdentityScope();
        disasterPointDaoConfig.clearIdentityScope();
    }

    public MonitorPointDao getMonitorPointDao() {
        return monitorPointDao;
    }

    public DisasterInfoDao getDisasterInfoDao() {
        return disasterInfoDao;
    }

    public DailyLogInfoDao getDailyLogInfoDao() {
        return dailyLogInfoDao;
    }

    public MonitorInfoDao getMonitorInfoDao() {
        return monitorInfoDao;
    }

    public DisasterPointDao getDisasterPointDao() {
        return disasterPointDao;
    }

}
